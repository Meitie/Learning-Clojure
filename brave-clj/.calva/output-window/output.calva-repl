; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Connecting ...
; No nrepl port file found.
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
7
clj꞉user꞉> 
"cornbread and butter beans"
clj꞉user꞉> 
(1 "blarg" :yip)
clj꞉user꞉> 
"(1 \"blarg\" :yip)"
clj꞉user꞉> 
(1 "blarg" :yip)
clj꞉user꞉> 
#'user/inc-maker
clj꞉user꞉> 
#'user/inc3
clj꞉user꞉> 
10
clj꞉user꞉> 
3
clj꞉user꞉> 
#'user/asym-hobbit-body-parts
clj꞉user꞉> 
#'user/matching-part
clj꞉user꞉> 
#'user/symmetrize-body-parts
clj꞉user꞉> 
[{:name "head", :size 3} {:name "left-eye", :size 1} {:name "right-eye", :size 1} {:name "left-ear", :size 1} {:name "right-ear", :size 1} {:name "mouth", :size 1} {:name "nose", :size 1} {:name "neck", :size 2} {:name "left-shoulder", :size 3} {:name "right-shoulder", :size 3} {:name "right-upper-arm", :size 3} {:name "left-upper-arm", :size 3} {:name "chest", :size 10} {:name "back", :size 10} {:name "left-forearm", :size 3} {:name "right-forearm", :size 3} {:name "abdomen", :size 6} {:name "left-kidney", :size 1} {:name "right-kidney", :size 1} {:name "left-hand", :size 2} {:name "right-hand", :size 2} {:name "right-knee", :size 2} {:name "left-knee", :size 2} {:name "right-thigh", :size 4} {:name "left-thigh", :size 4} {:name "right-lower-leg", :size 3} {:name "left-lower-leg", :size 3} {:name "right-achilles", :size 1} {:name "left-achilles", :size 1} {:name "right-foot", :size 2} {:name "left-foot", :size 2}]
clj꞉user꞉> 
3
clj꞉user꞉> 
; Syntax error compiling at (brave-clj/basics.clj:415:18).
; Unable to resolve symbol: dalmation-list in this context
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
("Pongo" "Perdita")
clj꞉user꞉> 
#'user/x
clj꞉user꞉> 
1
clj꞉user꞉> 
["Pongo" ("Perdita" "Puppy1" "Puppy2")]
clj꞉user꞉> 
["Pongo" "Perdita" "Puppy1"]
clj꞉user꞉> 
["Pongo" "Perdita" ("Puppy1" "Puppy2")]
clj꞉user꞉> 
["Pongo" " + " "Perdita" ("Puppy1" "Puppy2")]
clj꞉user꞉> 
["Pongo" " + " "Perdita" ("Puppy1" "Puppy2")]
clj꞉user꞉> 
["Pongo" " + " "Perdita" ("Puppy1" "Puppy2")]
clj꞉user꞉> 
["Pongo" "Perdita" ("Puppy1" "Puppy2")]
clj꞉user꞉> 
["Pongo" "Perdita" ("Puppy1" "Puppy2")]
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
#'user/bob
clj꞉user꞉> 
[["Pongo" "Perdita"] nil nil]
clj꞉user꞉> 
#'user/bob2
clj꞉user꞉> 
[["Pongo" "Perdita"] nil nil]
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
#'user/bob2
clj꞉user꞉> 
[["Pongo" "Perdita"] nil nil]
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
#'user/bob2
clj꞉user꞉> 
; Execution error (ArityException) at user/eval2114 (REPL:434).
; Wrong number of args (1) passed to: user/bob2
clj꞉user꞉> 
[["Pongo" "Perdita"] ["Pongo" "Perdita"] nil]
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
#'user/bob
clj꞉user꞉> 
#'user/bob2
clj꞉user꞉> 
["Pongo" "Perdita" (())]
clj꞉user꞉> 
["Pongo" "Perdita" (())]
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
#'user/bob
clj꞉user꞉> 
["Pongo" nil (())]
clj꞉user꞉> 
#'user/bob2
clj꞉user꞉> 
["Pongo" nil (())]
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
#'user/bob2
clj꞉user꞉> 
["Pongo" nil (())]
clj꞉user꞉> 
#'user/bob
clj꞉user꞉> 
["Pongo" nil (())]
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
["Pongo" nil nil]
clj꞉user꞉> 
["Pongo" nil nil]
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
["Pongo" nil nil]
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
["Pongo" nil nil]
clj꞉user꞉> 
["Pongo"]
clj꞉user꞉> 
starting code
bob 1 ran
nil
clj꞉user꞉> 
(clojure.core/+ 1 1)
clj꞉user꞉> 
(clojure.core/+ 1 1)
clj꞉user꞉> 
((clojure.core/+ 1 1))
clj꞉user꞉> 
(2)
clj꞉user꞉> 
(#object[clojure.core$_PLUS_ 0x1ca37ed9 "clojure.core$_PLUS_@1ca37ed9"] 1 1)
clj꞉user꞉> 
(#object[clojure.core$_PLUS_ 0x1ca37ed9 "clojure.core$_PLUS_@1ca37ed9"] 1 1)
clj꞉user꞉> 
; Execution error (IllegalStateException) at user/eval2194 (REPL:0).
; Attempting to call unbound fn: #'clojure.core/unquote-splicing
clj꞉user꞉> 
(user/bob "Pongo")
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
(user/bob "Pongo" "perdita")
clj꞉user꞉> 
starting code
bob 1 ran
bob 2 ran
nil
clj꞉user꞉> 
#'user/dalmation-list
clj꞉user꞉> 
starting code
bob 1 ran
; Execution error (ArityException) at user/eval2224 (REPL:461).
; Wrong number of args (1) passed to: user/bob2
clj꞉user꞉> 
[:a]
clj꞉user꞉> 
Iteration0
Iteration1
Iteration2
Iteration3
Iteration4
Goodbye!
nil
clj꞉user꞉> 
#'user/recursive-printer
clj꞉user꞉> 
0
1
2
3
4
Goodbye!
nil
clj꞉user꞉> 
1
2
3
4
Goodbye!
nil
clj꞉user꞉> 
"left-"
clj꞉user꞉> 
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
"left-"
clj꞉user꞉> 
10
clj꞉user꞉> 
10
clj꞉user꞉> 
25
clj꞉user꞉> 
#'user/my-reduce
clj꞉user꞉> 
#'user/better-symmetrize-body-parts
clj꞉user꞉> 
#'user/my-reduce
clj꞉user꞉> 
#'user/my-reduce
clj꞉user꞉> 
#'user/better-symmetrize-body-parts
clj꞉user꞉> 
[{:name "head", :size 3} {:name "left-eye", :size 1} {:name "right-eye", :size 1} {:name "left-ear", :size 1} {:name "right-ear", :size 1} {:name "mouth", :size 1} {:name "nose", :size 1} {:name "neck", :size 2} {:name "left-shoulder", :size 3} {:name "right-shoulder", :size 3} {:name "right-upper-arm", :size 3} {:name "left-upper-arm", :size 3} {:name "chest", :size 10} {:name "back", :size 10} {:name "left-forearm", :size 3} {:name "right-forearm", :size 3} {:name "abdomen", :size 6} {:name "left-kidney", :size 1} {:name "right-kidney", :size 1} {:name "left-hand", :size 2} {:name "right-hand", :size 2} {:name "right-knee", :size 2} {:name "left-knee", :size 2} {:name "right-thigh", :size 4} {:name "left-thigh", :size 4} {:name "right-lower-leg", :size 3} {:name "left-lower-leg", :size 3} {:name "right-achilles", :size 1} {:name "left-achilles", :size 1} {:name "right-foot", :size 2} {:name "left-foot", :size 2}]
clj꞉user꞉> 
#'user/my-reduce
clj꞉user꞉> 
#'user/better-symmetrize-body-parts
clj꞉user꞉> 
#'user/hit
clj꞉user꞉> 
{:name "left-eye", :size 1}
clj꞉user꞉> 
{:name "back", :size 10}
clj꞉user꞉> 
{:name "abdomen", :size 6}
clj꞉user꞉> 
{:name "head", :size 3}
clj꞉user꞉> 
"helllo bob"
clj꞉user꞉> 
#'user/add-onehundred
clj꞉user꞉> 
120
clj꞉user꞉> 
#'user/dec-maker
clj꞉user꞉> 
#'user/dec9
clj꞉user꞉> 
; Execution error (ClassCastException) at user/eval2305 (REPL:543).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'bootstrap')
clj꞉user꞉> 
#'user/dec-maker
clj꞉user꞉> 
#'user/dec9
clj꞉user꞉> 
; Execution error (ClassCastException) at user/eval2308 (REPL:543).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'bootstrap')
clj꞉user꞉> 
#'user/dec-maker
clj꞉user꞉> 
#'user/dec9
clj꞉user꞉> 
; Execution error (ClassCastException) at user/eval2311 (REPL:543).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'bootstrap')
clj꞉user꞉> 
#'user/dec-maker
clj꞉user꞉> 
#'user/dec9
clj꞉user꞉> 
19
clj꞉user꞉> 
#'user/dec-maker
clj꞉user꞉> 
#'user/dec9
clj꞉user꞉> 
1
clj꞉user꞉> 
